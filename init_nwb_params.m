%% start to load some of the rec_params and other information + raw_data (tif)
% to develop a general NWB file for an experimental session with general information..
nwb = NwbFile(...
    'session_description', session_description,...
    'identifier', animal, ...
    'session_start_time', datetime(datetime4), ...
    'general_experimenter', general_experimenter, ... 
    'general_session_id', experiment, ... % optional
    'general_institution', 'National Institutes of Health (NIH/NIMH)',... 
    'general_lab', 'Plenz Lab',...
    'general_notes', general_notes,...
    'general_pharmacology', 'N/A',... 
    'general_protocol', 'LS-909 and LS-914',...
    'general_related_publications', 'N/A',...; 
    'general_slices', 'N/A',...
    'general_source_script', 'N/A',...
    'general_source_script_file_name', 'N/A',...
    'general_stimulus', general_stimulus,...
    'general_surgery', general_surgery,...
    'general_virus', general_virus,...
    'general_experiment_description', general_experiment_description,...
    'general_intracellular_ephys_filtering', 'N/A',...
    'general_keywords', '2-PI, Mesoscope, Criticality, Neuronal Avalanches, V1, mPFC',...
    'general_data_collection', 'Data was Collected via 2-PI and/or Mesoscope as a .Raw or .Tif Timeseries, Along with Relevant Behavioral/Imaging Metadata')
nwb 

timestamps = 1:(Nframes);
% sepcify some information about the mouse...
subject = types.core.Subject(...
    'subject_id', experiment, ...
    'description', animal, ...
    'species', 'Mus musculus', ...
    'sex', sex, ...
    'weight', weight, ...
    'age', age, ...
    'genotype', genotype) % this is the age of the mouse in the form YY-MM-DD

nwb.general_subject = subject;

% specify information for device used for acquisition, will go into
% imagingplane...
device = types.core.Device(...
    'description', 'recorded from 2PI setup',...
    'manufacturer', 'ThorImages')
    
% specify information of imaging plane, will go into TwoPhotonSeries core
% class...
depth = string(depth);
location = strcat(location, '--', depth);
location = char(location);

excitation_lambda = (str2double(excitation_lambda3)) * 2;

imagingplane = types.core.ImagingPlane(...
    'description', 'this is the meta information for the imaging plane within the demo file',...
    'imaging_rate', framerate,...
    'indicator', GECI,...
    'location', location,...
    'device', device,...
    'excitation_lambda', excitation_lambda,...
    'grid_spacing_unit', 'meters',...
    'opticalchannel', opticalchannel)
    
% to load the raw tiff file under acquisition class within nwb through
% TwoPhotonSeries class + along with some other information...
raw_data = types.core.TwoPhotonSeries(...
    'field_of_view', FOV, ... % this is the FOV in meters 
    'format', '.tif',...
    'data', concat_raw_tifs,...
    'data_unit', 'lumens',...
    'timestamps', timestamps,... % data acquired (512x512) corresponds per frame temporal resolution
    'imaging_plane', imagingplane)

% place into acquisition slot in nwb
nwb.acquisition.set('raw_data', raw_data)
